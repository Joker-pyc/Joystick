class VirtualJoystick{constructor(t,i={}){this.container=t,this.options=Object.assign({width:100,height:100,color:"gray",handleColor:"white",handleRadius:20,onChange:null},i),this.joystick=document.createElement("div"),this.joystick.style.width=`${this.options.width}px`,this.joystick.style.height=`${this.options.height}px`,this.joystick.style.borderRadius="50%",this.joystick.style.backgroundColor=this.options.color,this.joystick.style.position="relative",this.joystick.style.touchAction="none",this.joystick.style.border="3px solid black",this.joystick.style.opacity="50%",this.container.appendChild(this.joystick),this.handle=document.createElement("div"),this.handle.style.width=`${2*this.options.handleRadius}px`,this.handle.style.height=`${2*this.options.handleRadius}px`,this.handle.style.borderRadius="50%",this.handle.style.backgroundColor=this.options.handleColor,this.handle.style.position="absolute",this.handle.style.top=`${this.options.height/2-this.options.handleRadius}px`,this.handle.style.left=`${this.options.width/2-this.options.handleRadius}px`,this.handle.style.touchAction="none",this.joystick.appendChild(this.handle),this.position={x:0,y:0},this.delta={x:0,y:0},this.handleRadius=this.options.handleRadius,this.joystickRect=this.joystick.getBoundingClientRect(),this.isPressed=!1,this.touchId=null,this._addEventListeners()}_addEventListeners(){this.handle.addEventListener("mousedown",this._handleMouseDown.bind(this)),document.addEventListener("mouseup",this._handleMouseUp.bind(this)),this.handle.addEventListener("touchstart",this._handleTouchStart.bind(this)),document.addEventListener("touchend",this._handleTouchEnd.bind(this)),document.addEventListener("touchcancel",this._handleTouchEnd.bind(this)),document.addEventListener("touchmove",this._handleTouchMove.bind(this))}_handleMouseDown(t){this.isPressed=!0,this._updatePosition(t.clientX,t.clientY)}_handleMouseUp(){this.isPressed=!1,this._updatePosition(this.joystickRect.left+this.options.width/2,this.joystickRect.top+this.options.height/2)}_handleTouchStart(t){null===this.touchId&&(this.touchId=t.changedTouches[0].identifier,this.isPressed=!0,this._updatePosition(t.changedTouches[0].clientX,t.changedTouches[0].clientY))}_handleTouchEnd(t){for(let i=0;i<t.changedTouches.length;i++)if(t.changedTouches[i].identifier===this.touchId){this.touchId=null,this.isPressed=!1,this._updatePosition(this.joystickRect.left+this.options.width/2,this.joystickRect.top+this.options.height/2);break}}_handleTouchMove(t){for(let i=0;i<t.changedTouches.length;i++)if(t.changedTouches[i].identifier===this.touchId){this._updatePosition(t.changedTouches[i].clientX,t.changedTouches[i].clientY);break}}_updatePosition(t,i){let s=t-this.joystickRect.left-this.options.width/2,h=i-this.joystickRect.top-this.options.height/2;if(Math.sqrt(s*s+h*h)>this.handleRadius){let e=Math.atan2(h,s);this.position={x:Math.cos(e)*this.handleRadius,y:Math.sin(e)*this.handleRadius}}else this.position={x:s,y:h};this.delta={x:this.position.x/this.handleRadius,y:this.position.y/this.handleRadius},this.handle.style.transform=`translate(${this.position.x}px, ${this.position.y}px)`,"function"==typeof this.options.onChange&&this.options.onChange(this.delta)}getAngle(){return Math.atan2(this.position.y,this.position.x)}getVelocity(){let{delta:t}=this;return Math.sqrt(t.x*t.x+t.y*t.y)}}export default VirtualJoystick;